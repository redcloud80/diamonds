<project name="Game" default="test" basedir=".">
    <description>Diamond Crush build file</description>

    <!-- base paths -->
    <property name="root" location="."/>
    <property name="src" location="${root}/src"/>
    <property name="testSrc" location="${root}/tests/src"/>
    <property name="bin" location="${root}/bin"/>
    <property name="testBin" location="${bin}/tests"/>
    <property name="lib" location="${root}/lib"/>
    <property name="jar" location="${lib}/jar"/>
    <property name="checks" location="${root}/checks"/>
    <property name="dist" location="${root}/dist"/>
    <property name="data" location="${root}/data"/>
    <property name="docs" location="${root}/docs"/>
    <property name="reports" location="${root}/reports"/>

    <!-- paths for code coverage and distribution -->
    <property name="instrumented" location="${bin}/instrumented"/>
    <property name="final" location="${dist}/DiamondCrush/DiamondCrush"/>
    <property name="final-root" location="${dist}/DiamondCrush"/>
	<property name="osx-root" location="${dist}/osx" />
	<property name="osx" location="${dist}/osx/Diamond Crush.app" />

    <!-- jar and native libraries -->
    <property name="lwgl.jar" location="${jar}/lwjgl.jar"/>
    <property name="lwgl.devil.jar" location="${jar}/lwjgl_devil.jar"/>
    <property name="lwgl.util.jar" location="${jar}/lwjgl_util.jar"/>
    <property name="trb.jar" location="${jar}/trb.jar"/>
    <property name="jorbis.jar" location="${jar}/jorbis-0.0.15.jar"/>
    <property name="jogg.jar" location="${jar}/jogg-0.0.7.jar"/>

    <property name="lib/win32" location="${lib}/win32"/>
    <property name="lib/linux" location="${lib}/linux"/>
    <property name="lib/linux64" location="${lib}/linux64"/>
    <property name="lib/macos" location="${lib}/macos"/>
    <property name="library.path"
        location="${lib/linux}${path.separator}${lib/macos}${path.separator}${lib/win32}"/>

    <!-- classpaths -->
    <path id="classpath.lwjgl">
        <pathelement location="${lwgl.jar}"/>
        <pathelement location="${lwgl.devil.jar}"/>
        <pathelement location="${lwgl.util.jar}"/>
        <pathelement location="${trb.jar}"/>
    </path>

    <path id="classpath.dev">
        <path refid="classpath.lwjgl"/>
        <pathelement location="${bin}/debug"/>
        <pathelement location="${lib}/junit.jar"/>
        <pathelement location="${lib}/jdepend-2.9.jar"/>
        <pathelement location="${lib}/cobertura/cobertura.jar"/>
    </path>

    <path id="classpath.release">
        <path refid="classpath.lwjgl"/>
        <pathelement location="${bin}/release"/>
    </path>
	
    <fileset id="test.fileset" dir="${testBin}/debug">
      <include name="**/Test*.class"/>
      <exclude name="**/*Test*$$*"/>
    </fileset>

    <!-- jars for ant tasks -->
    <taskdef resource="com/roxes/tools/ant/taskdefs.properties"
        classpath="${lib}/roxes-ant-tasks-1.2-2004-01-30.jar"/>
    <taskdef resource="checkstyletask.properties"
        classpath="${lib}/checkstyle/checkstyle-all-4.1.jar"/>
    <taskdef resource="tasks.properties"
        classpath="lib/cobertura/cobertura.jar"/>

    <!-- clean project  -->
    <target name="clean" description="Clean the directory trees">
        <delete dir="${bin}/debug"/>
        <delete dir="${bin}/release"/>
        <delete dir="${testBin}/debug"/>
        <delete dir="${testBin}/release"/>
        <delete dir="${reports}"/>
        <delete dir="${instrumented}"/>
        <delete file="${root}/bug-report.txt"/>
        <delete file ="${root}/cobertura.ser"/>
        <delete>
            <fileset dir="${root}">
                <include name="hs_err_*"/>
            </fileset>
        </delete>
		<delete>
			<fileset dir="${dist}">
				<include name="DiamondCrush-*"/>
			</fileset>
		</delete>
    </target>

    <!-- checkstyle task -->
    <target name="checkstyle" depends="clean">
        <mkdir dir="${reports}"/>
        <checkstyle config="${checks}/metrics.xml"
            failureProperty="checkstyle.failure" failOnViolation="true">
            <formatter type="xml" tofile="${reports}/checkstyle_report.xml"/>
            <formatter type="plain"/>
            <fileset dir="${src}">
                <include name="**/*.java"/>
                <exclude name="**/ignore/*"/>
            </fileset>
            <fileset dir="${testSrc}">
                <include name="**/*.java"/>
                <exclude name="**/ignore/*"/>
            </fileset>
        </checkstyle>
    </target>

    <!-- compilation target -->
    <target name="compile-debug" depends="checkstyle"
        description="Compile the java code from ${src} into ${bin}">
        <mkdir dir="${bin}/debug"/>
        <mkdir dir="${testBin}/debug"/>
        <javac
            destdir="${bin}/debug"
            debug="on"
            excludes="it/diamonds/tests/ignore/**">
            <src path="${src}"/>
            <src path="${testSrc}"/>

            <classpath refid="classpath.dev"/>
        </javac>
        <javac
            srcdir="${testSrc}"
            destdir="${testBin}/debug"
            debug="on"
            excludes="it/diamonds/tests/ignore/**">

            <classpath refid="classpath.dev"/>
        </javac>
    </target>

    <target name="compile-release" depends="checkstyle"
        description="Compile the java code from ${src} into ${bin}">
        <mkdir dir="${bin}/release"/>
        <javac
            optimize="yes"
            destdir="${bin}/release"
            debug="off">
            <src path="${src}"/>

            <classpath refid="classpath.release"/>
        </javac>
        <delete dir="${bin}/release/it/diamonds/tests"/>
    </target>

    <!-- unit testing task -->
    <target name="test" depends="compile-debug">
    <junit haltonfailure="yes" printsummary="off" fork="yes" forkmode="once" dir="${root}">
      <classpath refid="classpath.dev"/>
      <formatter type="xml"/>
      <formatter usefile="false" type="brief"/>
      <jvmarg value="-Djava.library.path=${library.path}"/>
      <batchtest fork="yes" todir="${reports}">
        <fileset refid="test.fileset"/>
      </batchtest>
    </junit>
    </target>

    <!-- test coverage instrumentation task -->
    <target name="instrument" depends="compile-debug">
        <cobertura-instrument todir="${instrumented}">
            <fileset dir="${bin}/debug">
                <include name="it/diamonds/**/*.class"/>
            	<exclude name="it/diamonds/tests/**/*.class"/>
            </fileset>
        </cobertura-instrument>
    </target>

    <target name="cover-test" depends="instrument">
        <mkdir dir="${reports}/instrumented"/>
        <junit haltonfailure="yes" printsummary="off" fork="yes" forkmode="once" dir="${root}">
            <jvmarg value="-Djava.library.path=${library.path}"/>
            <formatter type="xml"/>
            <formatter usefile="false" type="brief"/>
            <classpath location="${instrumented}"/>
            <classpath refid="classpath.dev"/>

            <batchtest fork="yes" todir="${reports}/instrumented">
            	<fileset refid="test.fileset"/>
            </batchtest>
        </junit>
    </target>

    <target name="cover-report" depends="cover-test">
        <cobertura-report format="html" destdir="${reports}/coverage" srcdir="${src}"/>
    </target>

    <!-- test and source distribution task -->
    <target name="test-dist-source" depends="clean, test" description="Create the distribution directory">
        <tstamp/>
        <mkdir dir="${dist}"/>
	    <zip destfile="${dist}/DiamondCrush-source-${DSTAMP}.zip">
	      <fileset dir="${src}"/>
	      <fileset dir="${testSrc}"/>
	    </zip>
    </target>

    <!-- JDepend task -->
	<target name="jdepend">

	  <jdepend format="xml" outputfile="${reports}/jdepend/jdepend-report.xml">
	      <exclude name="java.*"/>
	      <exclude name="javax.*"/>
	  	  <classpath refid="classpath.dev"/>
	      <classpath location="${src}" />
	  </jdepend>

	  <style basedir="${reports}" destdir="jdepend"
	         includes="jdepend-report.xml"
	         style="${ant.home}/etc/jdepend.xsl" />

	</target>


    <!-- distribution task -->
    <target name="dist" depends="test-dist-source, cover-report, compile-release" description="Create the distribution directory">
		<tstamp/>
        <mkdir dir="${dist}/common"/>
        <jar destfile="${dist}/DiamondCrush.jar" basedir="${bin}/release">
          <manifest>
            <attribute name="Main-Class" value="it.diamonds.Game"/>
            <attribute name="Class-Path" value="lib/jar/lwjgl.jar lib/jar/lwjgl_devil.jar lib/jar/lwjgl_util.jar lib/jar/trb.jar lib/jar/jorbis-0.0.15.jar lib/jar/jogg-0.0.7.jar"/>
          </manifest>
        </jar>

        <!-- common files -->
        <copy todir="${dist}/common/data">
            <fileset dir="${data}">
                <exclude name="diamond.png"/>
                <exclude name="TestGameConfig"/>
                <exclude name="textureTest.png"/>
            </fileset>
        </copy>
        <copy file="${docs}/Readme.txt" todir="${dist}/common"/>
        <copy file="${docs}/License.txt" todir="${dist}/common"/>
        <copy todir="${dist}/common/lib/jar">
            <fileset dir="${jar}"/>
        </copy>

        <!-- Windows -->
        <jstub archive="${dist}/DiamondCrush.jar" mode="win32-console" output="${dist}/DiamondCrush.exe">
          <execute>java -Djava.library.path=lib/win32 -Dorg.lwjgl.opengl.Display.allowSoftwareOpenGL=true -jar DiamondCrush.exe</execute>
        </jstub>

        <mkdir dir="${final}"/>
        <copy todir="${final}/lib/win32">
            <fileset dir="${lib/win32}"/>
        </copy>
        <copy todir="${final}/">
            <fileset dir="${dist}/common"/>
        </copy>
        <copy file="${dist}/DiamondCrush.exe" todir="${final}"/>
        <zip destfile="${dist}/DiamondCrush-Win32-${DSTAMP}.zip">
            <fileset dir="${final-root}"/>
        </zip>
        <delete dir="${final-root}"/>

        <!-- Linux -->
        <mkdir dir="${final}"/>
        <copy file="${root}/DiamondCrush" todir="${final}"/>
        <copy file="${docs}/openalrc.example" todir="${dist}/common/docs"/>
        <copy file="${docs}/asoundrc.example" todir="${dist}/common/docs"/>
        <copy todir="${final}/lib/linux">
            <fileset dir="${lib/linux}"/>
        </copy>
        <copy todir="${final}/">
            <fileset dir="${dist}/common"/>
        </copy>
        <copy file="${dist}/DiamondCrush.jar" todir="${final}"/>
        <zip destfile="${dist}/DiamondCrush-Linux-${DSTAMP}.zip">
            <fileset dir="${final-root}"/>
        </zip>
        <delete dir="${final-root}"/>

        <!-- Linux 64 -->
        <mkdir dir="${final}"/>
        <copy file="${root}/DiamondCrush" tofile="${final}/DiamondCrush64"/>
        <copy file="${docs}/openalrc.example" todir="${dist}/common/docs"/>
        <copy file="${docs}/asoundrc.example" todir="${dist}/common/docs"/>
        <copy todir="${final}/lib/linux64">
            <fileset dir="${lib/linux64}"/>
        </copy>
        <copy todir="${final}/">
            <fileset dir="${dist}/common"/>
        </copy>
        <copy file="${dist}/DiamondCrush.jar" todir="${final}"/>
        <zip destfile="${dist}/DiamondCrush-Linux64-${DSTAMP}.zip">
            <fileset dir="${final-root}"/>
        </zip>
        <delete dir="${final-root}"/>

        <!-- Mac OS X -->
		<copy todir="${osx}">
			<fileset dir="${dist}/osx-base/"/>
		</copy>
		<copy file="${dist}/DiamondCrush.jar" todir="${osx}/Contents/Resources/Java/"/>
		<copy todir="${osx}/Contents/Resources/Java/">
			<fileset dir="${dist}/common"/>
		</copy>
		<copy todir="${osx}/Contents/Resources/Java/lib/macos">
			<fileset dir="${lib/macos}"/>
		</copy>
		<zip destfile="${dist}/DiamondCrush-MacOSX-${DSTAMP}.zip">
			<fileset dir="${osx-root}"/>
		</zip>
		
        <delete dir="${final-root}"/>
        <delete dir="${dist}/common"/>
		<delete dir="${dist}/osx"/>
		<delete dir="${dist}/DiamondCrush"/>
        <delete file="${dist}/DiamondCrush.exe"/>
        <delete file="${dist}/DiamondCrush.sh"/>
        <delete file="${dist}/DiamondCrush.jar"/>
    </target>
</project>
